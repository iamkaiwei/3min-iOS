//------------------------------------------------------------------------------------------------------
// Debug vs Production configurations
//------------------------------------------------------------------------------------------------------

//Use this "EagleChild Production" scheme to upload to app store
#ifdef PRODUCTION

#define API_SERVER_HOST                             @"https://eagle-child-production.herokuapp.com"      //production url
#define GOOGLE_ANALYTICS_APP_KEY                    @"UA-44232541-1"
#define API_CLIENT_ID                               @"36d9b0cae1fb797b3095ebd8c50ef4b58df47f16d5aa18f96704f4c484136869"
#define API_GRANT_TYPE                              @"password"
#define URBAN_AIRSHIP_APP_KEY                       @"yq6GxkLBSUCxjQ2cGJw5DA"
#define URBAN_AIRSHIP_APP_SECRET                    @"HGyuL8agSXW7rBB9JJQILw"
#define SETTINGS_CRITERCISM_TOKEN_DEFAULT           @"51df74ddc463c2113c000002"
#define SETTINGS_LOCALYTICS_TOKEN_DEFAULT           @"f7e86c8413e50da8f46d1af-130c72d6-0489-11e3-11a5-004a77f8b47f"
#define SETTINGS_NEW_RELIC_TOKEN_DEFAULT            @""
#define SETTINGS_ITUNE_APP_ID                       @""
#define ENABLE_TRIPPLE_TAP_PREFILL                  NO
#define GOOGLE_ANALYTICS_APP_KEY                    @"UA-44232541-1"


//Normal development environment
#else
#ifdef DEBUG

#define GOOGLE_ANALYTICS_APP_KEY                    @"UA-44232541-1"
#define API_SERVER_HOST                             @"http://threemins-server-staging.herokuapp.com"
#define API_CLIENT_ID                               @"36d9b0cae1fb797b3095ebd8c50ef4b58df47f16d5aa18f96704f4c484136869"
#define API_GRANT_TYPE                              @"password"
#define URBAN_AIRSHIP_APP_KEY                       @"yq6GxkLBSUCxjQ2cGJw5DA"
#define URBAN_AIRSHIP_APP_SECRET                    @"HGyuL8agSXW7rBB9JJQILw"
#define SETTINGS_CRITERCISM_TOKEN_DEFAULT           @""
#define SETTINGS_LOCALYTICS_TOKEN_DEFAULT           @""
#define SETTINGS_NEW_RELIC_TOKEN_DEFAULT            @""
#define SETTINGS_ITUNE_APP_ID                       @""
#define ENABLE_TRIPPLE_TAP_PREFILL                  YES


//Staging, archive to app manager
#else

#define GOOGLE_ANALYTICS_APP_KEY                    @"UA-44232541-1"
#define API_SERVER_HOST                             @""        //app manager
#define URBAN_AIRSHIP_APP_KEY                       @""
#define URBAN_AIRSHIP_APP_SECRET                    @""
#define SETTINGS_CRITERCISM_TOKEN_DEFAULT           @""
#define SETTINGS_LOCALYTICS_TOKEN_DEFAULT           @""
#define SETTINGS_NEW_RELIC_TOKEN_DEFAULT            @""
#define SETTINGS_ITUNE_APP_ID                       @""
#define ENABLE_TRIPPLE_TAP_PREFILL                  YES

#endif
#endif

#define NOTIFICATION_RELOAD_CONVERSATION            @"updateConversationTableView"
#define NOTIFICATION_FINISH_LOGIN                   @"NotificationFinishLogin"
#define API_CLIENT_SERCET                           @"8eb597435160bcef09084a9bbd32c9d2a309b97b33f2e7284d2ac8c3840a0834"

#define CLASS_PREFIX_LENGTH                         3
#define API_PREFIX                                  @"/api/v1"
#define API_PRODUCTS                                @"/products"
#define API_USER                                    @"/users"
#define API_CONVERSATIONS                           @"/conversations"
#define API_CONVERSATION_REPLIES                    @"/conversation_replies"
#define API_USER_LOGIN                              @"/oauth/token"

//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------

//Notifications
#define CATEGORY_CHANGE_NOTIFICATION                @"CategoryChangeNotification"

#import <Availability.h>
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import <FacebookSDK/FacebookSDK.h>
#import <SystemConfiguration/SystemConfiguration.h>
#import <MobileCoreServices/MobileCoreServices.h>
#import <QuartzCore/QuartzCore.h>

// Categories
#import "ISO8601DateFormatter.h"
#import "MKMapView+Additions.h"
#import "NSArray+Additions.h"
#import "NSMutableArray+Additions.h"
#import "NSCalendar+Additions.h"
#import "NSData+Base64.h"
#import "NSDate+Additions.h"
#import "NSDictionary+Additions.h"
#import "NSObject+Additions.h"
#import "NSNumber+Additions.h"
#import "NSString+ActiveSupportInflector.h"
#import "NSString+Additions.h"
#import "NSString+Validation.h"
#import "UIAlertView+Additions.h"
#import "UIBarButtonItem+Custom.h"
#import "UIColor+Additions.h"
#import "UIColor+Custom.h"
#import "UIFont+Additions.h"
#import "UIImage+Additions.h"
#import "UIImage+ImageEffects.h"
#import "UIImageView+Additions.h"
#import "UILabel+Additions.h"
#import "UITextView+Additions.h"
#import "UINavigationController+Additions.h"
#import "UIView+Additions.h"
#import "UIView+Nib.h"
#import "UIView+Glow.h"
#import "UIScrollView+Additions.h"
#import "UIViewController+Additions.h"
#import "UIWebView+Additions.h"
#import "UIButton+Additions.h"
#import "UIFont+FontAwesome.h"
#import "NSString+FontAwesome.h"
#import "AFDownloadRequestOperation.h"
#import "SDWebImageManager.h"
#import "IIViewDeckController.h"
#import "TMEProduct+Additions.h"
#import "TMEProductImages+Additions.h"
#import "TMEUser+Additions.h"

// Managers
#import "BaseManager.h"
#import "TMEProductsManager.h"
#import "TMECategoryManager.h"
#import "TMEUserManager.h"
#import "TMEFacebookManager.h"
#import "FacebookManager.h"
#import "BaseNetworkManager.h"
#import "TMEConversationManager.h"
#import "TMEReachabilityManager.h"

// Models
#import "TMEProduct.h"
#import "TMEProductImages.h"
#import "TMECategory.h"
#import "TMEUser.h"
#import "TMEReply.h"
#import "TMEConversation.h"

// Vendors
#import "CoreData+MagicalRecord.h"
#import "Crittercism.h"
#import "SVProgressHUD.h"
#import "AFNetworking.h"
#import "OpenUDID.h"
#import "iCarousel.h"
#import "UINavigationController+SGProgress.h"
#import "SSPullToRefresh.h"
#import "Reachability.h"
#import "TSMessage.h"
#import "UIView+MTAnimation.h"
#import "MTMatrixInterpolation.h"
#import "MTAnimationTypes.h"
#import "MTTimingFunctions.h"

// Common VCs
#import "TMENavigationViewController.h"
#import "TMELoginViewController.h"
#import "TMEBaseViewController.h"
#import "TMEBaseTableViewController.h"
#import "TMELeftMenuViewController.h"
#import "TMEBaseTabBarViewController.h"

// Views
#import "TMEBaseTableViewCell.h"



//------------------------------------------------------------------------------------------------------

//
// Convenient macros
//

#define getrandom(min, max) ((rand()%(int)(((max) + 1)-(min)))+ (min))

//
// Convenient macro to check app version
//
#define APP_VERSION                                 ([[[NSBundle mainBundle] infoDictionary] objectForKey:(NSString*)kCFBundleVersionKey])
#define APP_VERSION_EQUAL_TO(v)                     ([APP_VERSION compare:v options:NSNumericSearch] == NSOrderedSame)
#define APP_VERSION_GREATER_THAN(v)                 ([APP_VERSION compare:v options:NSNumericSearch] == NSOrderedDescending)
#define APP_VERSION_GREATER_THAN_OR_EQUAL_TO(v)     ([APP_VERSION compare:v options:NSNumericSearch] != NSOrderedAscending)
#define APP_VERSION_LESS_THAN(v)                    ([APP_VERSION compare:v options:NSNumericSearch] == NSOrderedAscending)
#define APP_VERSION_LESS_THAN_OR_EQUAL_TO(v)        ([APP_VERSION compare:v options:NSNumericSearch] != NSOrderedDescending)

//
// Convenient macro to check system version
// Source: http://stackoverflow.com/questions/3339722/check-iphone-ios-version
//
#define SYSTEM_VERSION                              ([[UIDevice currentDevice] systemVersion])
#define SYSTEM_VERSION_EQUAL_TO(v)                  ([SYSTEM_VERSION compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([SYSTEM_VERSION compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([SYSTEM_VERSION compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([SYSTEM_VERSION compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([SYSTEM_VERSION compare:v options:NSNumericSearch] != NSOrderedDescending)

#define DEVICE_NAME                                 ([[UIDevice currentDevice] name])

#define IS_LANDSCAPE                                (UIInterfaceOrientationIsLandscape([UIApplication sharedApplication].statusBarOrientation))
#define IS_PORTRAIT                                 (UIInterfaceOrientationIsPortrait([UIApplication sharedApplication].statusBarOrientation))
#define IS_SIMULATOR                                ([[[UIDevice currentDevice] model] hasSuffix:@"Simulator"])
#define IS_IPAD                                     ([UIDevice currentDevice].userInterfaceIdiom==UIUserInterfaceIdiomPad)
#define IS_NOT_IPAD                                 ([UIDevice currentDevice].userInterfaceIdiom!=UIUserInterfaceIdiomPad)
#define IS_RETINA                                   ([UIScreen mainScreen].scale > 1)
#define DEVICE_SCALE                                ([UIScreen mainScreen].scale)

#define IS_IPHONE_5 ( fabs( ( double )[ [ UIScreen mainScreen ] bounds ].size.height - ( double )568 ) < DBL_EPSILON )

//
// Source: http://iphoneincubator.com/blog/debugging/the-evolution-of-a-replacement-for-nslog
// Source: http://www.cimgf.com/2010/05/02/my-current-prefix-pch-file/
//
// DLog is almost a drop-in replacement for NSLog to turn off logging for release build
//
// add -DDEBUG to OTHER_CFLAGS in the build user defined settings
//
// Usage:
//
// DLog();
// DLog(@"here");
// DLog(@"value: %d", x);
// Unfortunately this doesn't work DLog(aStringVariable); you have to do this instead DLog(@"%@", aStringVariable);
//

#ifdef DEBUG
#define DLog(__FORMAT__, ...) NSLog((@"%s [L:%d] " __FORMAT__), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
#define DLog(...) do {} while (0)
#endif
